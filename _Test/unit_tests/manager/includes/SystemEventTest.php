<?php

require_once dirname(__FILE__) . '/../../../../manager/includes/document.parser.class.inc.php';

/**
 * Test class for SystemEvent.
 * Generated by PHPUnit
 *
 * @author  Stefanie Janine Stoelting (mail@stefanie-stoelting.de)
 * @name    SystemEventTest
 * @package MODX
 * @subpackage unitTests
 * @license LGPL
 */
class SystemEventTest extends PHPUnit_Framework_TestCase {

    /**
     * @var SystemEvent
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new SystemEvent;
    } // setUp

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    } // tearDown

    /**
     * @covers SystemEvent::alert
     */
    public function testAlert() {
        $this->object->alert('Test message');
        $this->assertTrue(true);
    } // testAlert

    /**
     * @covers SystemEvent::output
     */
    public function testOutput() {
        $msg = 'Test Message';
        $this->object->output($msg);

        $this->assertEquals($msg, $this->object->_output);
    } // testOutput

    /**
     * @covers SystemEvent::stopPropagation
     */
    public function testStopPropagation() {
        $this->object->stopPropagation();

        $this->assertFalse($this->object->_propagate);
    } // testStopPropagation

    /**
     * @covers SystemEvent::_resetEventObject
     */
    public function test_resetEventObject() {
        $this->object->_resetEventObject();

        $this->assertEmpty($this->object->name);
        $this->assertEmpty($this->object->_output);
        $this->assertEmpty($this->object->_globalVariables);
        $this->assertTrue($this->object->_propagate);
        $this->assertFalse($this->object->activated);
    } // test_resetEventObject

    /**
     * @covers SystemEvent::setGlobalVariable
     */
    public function testSetGlobalVariable() {
        $GLOBALS['UnitTest'] = true;

        $this->object->setGlobalVariable('UnitTest', false);

        $this->assertArrayHasKey('UnitTest', $this->object->_globalVariables);
    } // testSetGlobalVariable

    public function testSetAllGlobalVariables() {
        $GLOBALS['UnitTest'] = true;

        $this->object->setGlobalVariable('UnitTest', false);

        $this->assertArrayHasKey('UnitTest', $this->object->_globalVariables);

        $this->object->setAllGlobalVariables();
        global $UnitTest;
        $this->assertFalse($UnitTest);
    } // testSetAllGlobalVariables

} // SystemEventTest